// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The Header component Should mount the Header component without errors 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(Header)
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "authenticated": false,
      "signUserOut": [Function],
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "storeSubscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      },
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "authenticated": false,
        "signUserOut": [Function],
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": [Function],
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`The Header component Should render profile link when user is authenticated 1`] = `
<header>
  <nav
    className="navbar navbar-expand-lg navbar-dark bg-dark"
  >
    <a
      className="navbar-brand"
      href="/"
    >
      More Recipes
    </a>
    <button
      aria-controls="navbarSupportedContent"
      aria-expanded="false"
      aria-label="Toggle navigation"
      className="navbar-toggler"
      data-target="#navbarSupportedContent"
      data-toggle="collapse"
      type="button"
    >
      <span
        className="navbar-toggler-icon"
      />
    </button>
    <div
      className="collapse navbar-collapse"
      id="navbarSupportedContent"
    >
      <ul
        className="navbar-nav mr-auto"
      >
        <li
          className="nav-item"
        >
          <a
            className="nav-link"
            href="/"
            onClick={[Function]}
          >
            Home
          </a>
          <span
            className="sr-only"
          >
            (current)
          </span>
        </li>
        <li
          className="nav-item"
        >
          <a
            className="nav-link"
            href="/recipes"
            onClick={[Function]}
          >
            Recipes
          </a>
        </li>
        <li
          className="nav-item"
        >
          <a
            className="nav-link"
            href="/profile"
            onClick={[Function]}
          >
            Profile
          </a>
        </li>
        <li
          className="nav-item"
        >
          <a
            className="nav-link"
            onClick={[Function]}
          >
            Sign out
          </a>
        </li>
      </ul>
    </div>
  </nav>
</header>
`;
